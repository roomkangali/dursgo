{
  "scan_summary": {
    "target_url": "http://testphp.vulnweb.com/",
    "scan_start_time": "2025-09-12T10:49:52+07:00",
    "scan_end_time": "2025-09-12T11:03:59+07:00",
    "total_duration": "14m7s",
    "scanners_run": [
      "bola",
      "cmdinjection",
      "cors",
      "csrf",
      "domxss",
      "exposed",
      "fileupload",
      "graphql",
      "idor",
      "lfi",
      "massassignment",
      "openredirect",
      "securityheaders",
      "sqli",
      "ssrf",
      "ssti",
      "subdomain",
      "xss"
    ],
    "technologies_detected": {
      "WebServer": "nginx/1.19.0",
      "X-Powered-By": "PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1"
    },
    "total_urls_discovered": 56,
    "total_parameterized_requests": 0,
    "total_vulnerabilities_found": 44
  },
  "vulnerabilities": [
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-3.html?id=%22%3E%3CsVg%2Fonload%3Dconfirm%281%29+class%3DDursgoXSS680127407%3E",
      "Parameter": "id",
      "Payload": "\"\u003e\u003csVg/onload=confirm(1) class=DursgoXSS680127407\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'Attribute' context. Description: Breaks out of an attribute and uses an SVG tag with onload event. (DURSGO_MARKER)",
      "severity": "high",
      "evidence": "\u003csVg/onload=confirm(1) class=DursgoXSS680127407\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/artists.php?artist=%22%3E%3CsVg%2Fonload%3Dconfirm%281%29+class%3DDursgoXSS424826864%3E",
      "Parameter": "artist",
      "Payload": "\"\u003e\u003csVg/onload=confirm(1) class=DursgoXSS424826864\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'Attribute' context. Description: Breaks out of an attribute and uses an SVG tag with onload event. (DURSGO_MARKER)",
      "severity": "high",
      "evidence": "\u003csVg/onload=confirm(1) class=DursgoXSS424826864\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/?id=%22%3E%3CsVg%2Fonload%3Dconfirm%281%29+class%3DDursgoXSS737272218%3E",
      "Parameter": "id",
      "Payload": "\"\u003e\u003csVg/onload=confirm(1) class=DursgoXSS737272218\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'Attribute' context. Description: Breaks out of an attribute and uses an SVG tag with onload event. (DURSGO_MARKER)",
      "severity": "high",
      "evidence": "\u003csVg/onload=confirm(1) class=DursgoXSS737272218\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/hpp/?pp=%3Cscript%3Ealert%28%27DursgoXSS299260911%27%29%3C%2Fscript%3E",
      "Parameter": "pp",
      "Payload": "\u003cscript\u003ealert('DursgoXSS299260911')\u003c/script\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'HTML' context. Description: Basic script tag injection",
      "severity": "high",
      "evidence": "\u003cscript\u003ealert('DursgoXSS299260911')\u003c/script\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/userinfo.php",
      "Parameter": "pass",
      "Payload": "'",
      "Location": "body",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/userinfo.php",
      "Parameter": "uname",
      "Payload": "'",
      "Location": "body",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-3.html?id=%27",
      "Parameter": "id",
      "Payload": "'",
      "Location": "query",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/artists.php?artist=1%27",
      "Parameter": "artist",
      "Payload": "'",
      "Location": "query",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/?id=%27",
      "Parameter": "id",
      "Payload": "'",
      "Location": "query",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "Missing Security Header",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/",
      "Payload": "Implement a strict Content Security Policy (CSP) to restrict sources for scripts, styles, images, and other content.",
      "Details": "Header 'Content-Security-Policy' not found. Helps prevent XSS and other injection attacks by restricting the content sources allowed to load in the browser.",
      "severity": "High",
      "evidence": "Header 'Content-Security-Policy' is missing in response headers.",
      "remediation": "Implement a strict Content Security Policy (CSP) to restrict sources for scripts, styles, images, and other content.",
      "scanner_name": "securityheaders"
    },
    {
      "VulnerabilityType": "SQL Injection (Content-Based)",
      "URL": "http://testphp.vulnweb.com/hpp/?pp=12%27+OR+%271%27%3D%271%27--",
      "Parameter": "pp",
      "Payload": "' OR '1'='1'--",
      "Location": "query",
      "Details": "The response length increased significantly (from 383 to 437 bytes) after injecting a bypass payload, suggesting the query returned additional data.",
      "severity": "High",
      "evidence": "Original Length: 383, Injected Length: 437",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/search.php?test=query",
      "Parameter": "searchFor",
      "Payload": "');",
      "Location": "body",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "Directory Listing",
      "URL": "http://testphp.vulnweb.com/vendor/",
      "Details": "Directory http://testphp.vulnweb.com/vendor/ is accessible and shows a file listing.",
      "severity": "Low",
      "evidence": "Common directory listing keywords found in response body.",
      "remediation": "Disable directory listing on the server or configure access controls properly.",
      "scanner_name": "exposed"
    },
    {
      "VulnerabilityType": "Directory Listing",
      "URL": "http://testphp.vulnweb.com/admin/",
      "Details": "Directory http://testphp.vulnweb.com/admin/ is accessible and shows a file listing.",
      "severity": "Low",
      "evidence": "Common directory listing keywords found in response body.",
      "remediation": "Disable directory listing on the server or configure access controls properly.",
      "scanner_name": "exposed"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/?id=%22%3E%3CsVg%2Fonload%3Dconfirm%281%29+class%3DDursgoXSS638421610%3E",
      "Parameter": "id",
      "Payload": "\"\u003e\u003csVg/onload=confirm(1) class=DursgoXSS638421610\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'Attribute' context. Description: Breaks out of an attribute and uses an SVG tag with onload event. (DURSGO_MARKER)",
      "severity": "high",
      "evidence": "\u003csVg/onload=confirm(1) class=DursgoXSS638421610\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/?id=%27",
      "Parameter": "id",
      "Payload": "'",
      "Location": "query",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "Local File Inclusion/Path Traversal",
      "URL": "http://testphp.vulnweb.com/showimage.php?file=..%2F..%2Fetc%2Fpasswd\u0026size=160",
      "Parameter": "file",
      "Payload": "../../etc/passwd",
      "Location": "query",
      "Details": "LFI payload '../../etc/passwd' returned known file content matching keyword: 'root:x:0:0:'",
      "severity": "High",
      "evidence": "root:x:0:0:",
      "remediation": "Validate and sanitize all user input. Implement an allow-list of files that can be included and disallow path traversal characters.",
      "scanner_name": "Advanced Local File Inclusion Scanner"
    },
    {
      "VulnerabilityType": "Cross-Site Request Forgery (CSRF)",
      "URL": "http://testphp.vulnweb.com/search.php?test=query",
      "Location": "body",
      "Details": "The form does not contain any CSRF token, making it vulnerable to CSRF attacks.",
      "severity": "High",
      "evidence": "No CSRF token parameter found in the form.",
      "remediation": "Implement CSRF protection using synchronizer tokens, SameSite cookies, or double submit tokens.",
      "scanner_name": "csrf"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/?id=%22%3E%3CsVg%2Fonload%3Dconfirm%281%29+class%3DDursgoXSS487708689%3E",
      "Parameter": "id",
      "Payload": "\"\u003e\u003csVg/onload=confirm(1) class=DursgoXSS487708689\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'Attribute' context. Description: Breaks out of an attribute and uses an SVG tag with onload event. (DURSGO_MARKER)",
      "severity": "high",
      "evidence": "\u003csVg/onload=confirm(1) class=DursgoXSS487708689\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/?id=%27",
      "Parameter": "id",
      "Payload": "'",
      "Location": "query",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "Command Injection (Output-Based)",
      "URL": "http://testphp.vulnweb.com/showimage.php?file=.%2Fpictures%2F1.jpg\u0026size=160%3Bwhoami",
      "Parameter": "size",
      "Payload": ";whoami",
      "Location": "query,query",
      "Details": "Command output detected for OS 'any'.",
      "severity": "high",
      "evidence": "qD\\T",
      "remediation": "Do not use user input directly in command execution. Use safe APIs and strict validation.",
      "scanner_name": "Context-Aware Command Injection Scanner"
    },
    {
      "VulnerabilityType": "Cross-Site Request Forgery (CSRF)",
      "URL": "http://testphp.vulnweb.com/cart.php",
      "Location": "body",
      "Details": "The form does not contain any CSRF token, making it vulnerable to CSRF attacks.",
      "severity": "High",
      "evidence": "No CSRF token parameter found in the form.",
      "remediation": "Implement CSRF protection using synchronizer tokens, SameSite cookies, or double submit tokens.",
      "scanner_name": "csrf"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/?id=%22%3E%3CsVg%2Fonload%3Dconfirm%281%29+class%3DDursgoXSS124790759%3E",
      "Parameter": "id",
      "Payload": "\"\u003e\u003csVg/onload=confirm(1) class=DursgoXSS124790759\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'Attribute' context. Description: Breaks out of an attribute and uses an SVG tag with onload event. (DURSGO_MARKER)",
      "severity": "high",
      "evidence": "\u003csVg/onload=confirm(1) class=DursgoXSS124790759\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/?id=%27",
      "Parameter": "id",
      "Payload": "'",
      "Location": "query",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/product.php?pic=%22%3E%3CsVg%2Fonload%3Dconfirm%281%29+class%3DDursgoXSS709166659%3E",
      "Parameter": "pic",
      "Payload": "\"\u003e\u003csVg/onload=confirm(1) class=DursgoXSS709166659\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'Attribute' context. Description: Breaks out of an attribute and uses an SVG tag with onload event. (DURSGO_MARKER)",
      "severity": "high",
      "evidence": "\u003csVg/onload=confirm(1) class=DursgoXSS709166659\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/product.php?pic=1%27",
      "Parameter": "pic",
      "Payload": "'",
      "Location": "query",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/secured/newuser.php",
      "Parameter": "uuname",
      "Payload": "'",
      "Location": "body",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/listproducts.php?artist=%22%3E%3CsVg%2Fonload%3Dconfirm%281%29+class%3DDursgoXSS934978810%3E",
      "Parameter": "artist",
      "Payload": "\"\u003e\u003csVg/onload=confirm(1) class=DursgoXSS934978810\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'Attribute' context. Description: Breaks out of an attribute and uses an SVG tag with onload event. (DURSGO_MARKER)",
      "severity": "high",
      "evidence": "\u003csVg/onload=confirm(1) class=DursgoXSS934978810\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/listproducts.php?artist=1\u0026cat=%22%3E%3CsVg%2Fonload%3Dconfirm%281%29+class%3DDursgoXSS615033793%3E",
      "Parameter": "cat",
      "Payload": "\"\u003e\u003csVg/onload=confirm(1) class=DursgoXSS615033793\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'Attribute' context. Description: Breaks out of an attribute and uses an SVG tag with onload event. (DURSGO_MARKER)",
      "severity": "high",
      "evidence": "\u003csVg/onload=confirm(1) class=DursgoXSS615033793\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/listproducts.php?artist=1%27",
      "Parameter": "artist",
      "Payload": "'",
      "Location": "query",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "SQL Injection (Error-Based)",
      "URL": "http://testphp.vulnweb.com/listproducts.php?artist=1\u0026cat=%27",
      "Parameter": "cat",
      "Payload": "'",
      "Location": "query",
      "Details": "A database error message was detected in the response, indicating a potential SQL injection vulnerability.",
      "severity": "High",
      "evidence": "You have an error in your SQL syntax",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/hpp/params.php?p=%3Cscript%3Ealert%28%27DursgoXSS469404674%27%29%3C%2Fscript%3E\u0026pp=12",
      "Parameter": "p",
      "Payload": "\u003cscript\u003ealert('DursgoXSS469404674')\u003c/script\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'HTML' context. Description: Basic script tag injection",
      "severity": "high",
      "evidence": "\u003cscript\u003ealert('DursgoXSS469404674')\u003c/script\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "Reflected XSS",
      "URL": "http://testphp.vulnweb.com/hpp/params.php?p=valid\u0026pp=%3Cscript%3Ealert%28%27DursgoXSS82066256%27%29%3C%2Fscript%3E",
      "Parameter": "pp",
      "Payload": "\u003cscript\u003ealert('DursgoXSS82066256')\u003c/script\u003e",
      "Location": "query",
      "Details": "Injected payload was executed in a 'HTML' context. Description: Basic script tag injection",
      "severity": "high",
      "evidence": "\u003cscript\u003ealert('DursgoXSS82066256')\u003c/script\u003e",
      "remediation": "Sanitize user input and implement proper output encoding based on context.",
      "scanner_name": "xss-reflected"
    },
    {
      "VulnerabilityType": "SQL Injection (Content-Based)",
      "URL": "http://testphp.vulnweb.com/hpp/params.php?p=valid%27+OR+1%3D1--\u0026pp=12",
      "Parameter": "p",
      "Payload": "' OR 1=1--",
      "Location": "query",
      "Details": "The response length increased significantly (from 7 to 17 bytes) after injecting a bypass payload, suggesting the query returned additional data.",
      "severity": "High",
      "evidence": "Original Length: 7, Injected Length: 17",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "SQL Injection (Content-Based)",
      "URL": "http://testphp.vulnweb.com/hpp/params.php?p=valid\u0026pp=12%27+OR+1%3D1--",
      "Parameter": "pp",
      "Payload": "' OR 1=1--",
      "Location": "query",
      "Details": "The response length increased significantly (from 7 to 17 bytes) after injecting a bypass payload, suggesting the query returned additional data.",
      "severity": "High",
      "evidence": "Original Length: 7, Injected Length: 17",
      "remediation": "Use parameterized queries (prepared statements).",
      "scanner_name": "Advanced SQL Injection Scanner"
    },
    {
      "VulnerabilityType": "Cross-Site Request Forgery (CSRF)",
      "URL": "http://testphp.vulnweb.com/guestbook.php",
      "Location": "body",
      "Details": "The form does not contain any CSRF token, making it vulnerable to CSRF attacks.",
      "severity": "High",
      "evidence": "No CSRF token parameter found in the form.",
      "remediation": "Implement CSRF protection using synchronizer tokens, SameSite cookies, or double submit tokens.",
      "scanner_name": "csrf"
    },
    {
      "VulnerabilityType": "Cross-Site Request Forgery (CSRF)",
      "URL": "http://testphp.vulnweb.com/secured/newuser.php",
      "Location": "body",
      "Details": "The form does not contain any CSRF token, making it vulnerable to CSRF attacks.",
      "severity": "High",
      "evidence": "No CSRF token parameter found in the form.",
      "remediation": "Implement CSRF protection using synchronizer tokens, SameSite cookies, or double submit tokens.",
      "scanner_name": "csrf"
    },
    {
      "VulnerabilityType": "Exposed Sensitive File",
      "URL": "http://testphp.vulnweb.com/secured/phpinfo.php",
      "Details": "Sensitive file/path http://testphp.vulnweb.com/secured/phpinfo.php is publicly accessible (Status: 200).",
      "severity": "Low",
      "evidence": "Resource responded with 200 OK and content was served.",
      "remediation": "Restrict public access to sensitive files and validate file exposure using access control.",
      "scanner_name": "exposed"
    },
    {
      "VulnerabilityType": "Active Subdomain Discovered",
      "URL": "http://rest.vulnweb.com",
      "Details": "Subdomain 'rest.vulnweb.com' is active and responded with status code 200.",
      "severity": "Info",
      "scanner_name": "subdomain"
    },
    {
      "VulnerabilityType": "Active Subdomain Discovered",
      "URL": "http://testphp.vulnweb.com",
      "Details": "Subdomain 'testphp.vulnweb.com' is active and responded with status code 200.",
      "severity": "Info",
      "scanner_name": "subdomain"
    },
    {
      "VulnerabilityType": "Active Subdomain Discovered",
      "URL": "http://www.vulnweb.com",
      "Details": "Subdomain 'www.vulnweb.com' is active and responded with status code 200.",
      "severity": "Info",
      "scanner_name": "subdomain"
    },
    {
      "VulnerabilityType": "Active Subdomain Discovered",
      "URL": "http://testhtml5.vulnweb.com",
      "Details": "Subdomain 'testhtml5.vulnweb.com' is active and responded with status code 200.",
      "severity": "Info",
      "scanner_name": "subdomain"
    },
    {
      "VulnerabilityType": "Active Subdomain Discovered",
      "URL": "http://testaspnet.vulnweb.com",
      "Details": "Subdomain 'testaspnet.vulnweb.com' is active and responded with status code 200.",
      "severity": "Info",
      "scanner_name": "subdomain"
    },
    {
      "VulnerabilityType": "Active Subdomain Discovered",
      "URL": "http://testasp.vulnweb.com",
      "Details": "Subdomain 'testasp.vulnweb.com' is active and responded with status code 200.",
      "severity": "Info",
      "scanner_name": "subdomain"
    }
  ]
}